{"version":3,"sources":["actions/actionType.js","actions/actionCreators.js","components/ServiceList.jsx","components/ServiceAdd.jsx","components/ServiceFilter.jsx","App.jsx","reducers/serviceAdd.js","reducers/serviceList.js","reducers/serviceFilter.js","store/store.js","index.js"],"names":["ADD_SERVICE","REMOVE_SERVICE","UPDATE_SERVICE","CHANGE_SERVICE_FIELD","CLEAR_SERVICE_FIELD","EDIT_SERVICE","FILTER_SERVICES","clearServiceFiled","type","ServiceList","storedItems","useSelector","state","serviceList","filteredItems","serviceFilter","useState","items","setItems","dispatch","useDispatch","useEffect","itemsToSet","filterText","handleEdit","item","id","name","price","title","payload","editService","handleRemove","removeService","map","className","onClick","ServiceAdd","serviceAdd","handleCange","e","target","value","changeServiceField","onSubmit","preventDefault","updateService","addService","onReset","onChange","ServiceFilter","setFilterText","filterService","placeholder","App","initialstate","nanoid","initialState","reducer","combineReducers","action","Number","filter","service","filteredState","data","match","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.61f91f2e.chunk.js","sourcesContent":["export const ADD_SERVICE = 'ADD_SERVICE';\nexport const REMOVE_SERVICE = 'REMOVE_SERVICE';\nexport const UPDATE_SERVICE = 'UPDATE_SERVICE';\nexport const CHANGE_SERVICE_FIELD = 'CHANGE_SERVICE_FIELD';\nexport const CLEAR_SERVICE_FIELD = 'CLEAR_SERVICE_FIELD';\nexport const EDIT_SERVICE = 'EDIT_SERVICE';\nexport const FILTER_SERVICES = 'FILTER_SERVICES';\n","import {\n   ADD_SERVICE,\n   REMOVE_SERVICE,\n   UPDATE_SERVICE,\n   CLEAR_SERVICE_FIELD,\n   EDIT_SERVICE,\n   CHANGE_SERVICE_FIELD,\n   FILTER_SERVICES,\n} from './actionType';\n\nexport function addService(name, price) {\n   return {\n      type: ADD_SERVICE,\n      payload: {\n         name,\n         price,\n      },\n   };\n}\n\nexport function removeService(id) {\n   return {\n      type: REMOVE_SERVICE,\n      payload: {\n         id,\n      },\n   };\n}\n\nexport function clearServiceFiled() {\n   return {\n      type: CLEAR_SERVICE_FIELD,\n   };\n}\n\nexport function updateService(id, name, price) {\n   return {\n      type: UPDATE_SERVICE,\n      payload: {\n         id,\n         name,\n         price,\n      },\n   };\n}\n\nexport function editService(id, title, price) {\n   return {\n      type: EDIT_SERVICE,\n      payload: {\n         id,\n         title,\n         price,\n      },\n   };\n}\n\nexport function changeServiceField(name, value) {\n   return {\n      type: CHANGE_SERVICE_FIELD,\n      payload: {\n         name,\n         value,\n      },\n   };\n}\n\nexport function filterService(items, value) {\n   return {\n      type: FILTER_SERVICES,\n      payload: {\n         items,\n         value,\n      },\n   };\n}\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n   removeService,\n   clearServiceFiled,\n   editService,\n} from '../actions/actionCreators';\n\nexport default function ServiceList() {\n   const storedItems = useSelector((state) => state.serviceList);\n   const filteredItems = useSelector((state) => state.serviceFilter);\n   const [items, setItems] = useState(storedItems);\n\n   const dispatch = useDispatch();\n\n   useEffect(() => {\n      const itemsToSet = filteredItems.filterText\n         ? filteredItems.filteredItems\n         : storedItems;\n      setItems(itemsToSet);\n   }, [filteredItems, storedItems]);\n\n   const handleEdit = (item) => {\n      const { id, name, price } = item;\n      dispatch(editService(id, name, price));\n   };\n\n   const handleRemove = (id) => {\n      dispatch(removeService(id));\n      dispatch(clearServiceFiled());\n   };\n\n   return (\n      <ul>\n         {items.map((item) => (\n            <li key={item.id}>\n               {item.name} - {item.price}\n               <button\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleEdit(item)}\n               >\n                  Edit\n               </button>\n               <button\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleRemove(item.id)}\n               >\n                  Remove\n               </button>\n            </li>\n         ))}\n      </ul>\n   );\n}\n","/* eslint-disable react/button-has-type */\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n   addService,\n   changeServiceField,\n   clearServiceFiled,\n   updateService,\n} from '../actions/actionCreators';\n\nexport default function ServiceAdd() {\n   const item = useSelector((state) => state.serviceAdd);\n   const dispatch = useDispatch();\n\n   const handleCange = (e) => {\n      const { name, value } = e.target;\n      dispatch(changeServiceField(name, value));\n   };\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      const { name, price } = item;\n\n      if (item.id) {\n         dispatch(updateService(item.id, name, price));\n         dispatch(clearServiceFiled());\n      } else if (name && price) {\n         dispatch(addService(name, price));\n         dispatch(clearServiceFiled());\n      }\n   };\n\n   const handleReset = () => {\n      dispatch(clearServiceFiled());\n   };\n\n   return (\n      <form onSubmit={handleSubmit} onReset={handleReset}>\n         <input name=\"name\" onChange={handleCange} value={item.name} />\n         <input name=\"price\" onChange={handleCange} value={item.price} />\n         <button type=\"submit\">Save</button>\n         <button type=\"reset\">Cancel</button>\n      </form>\n   );\n}\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterService } from '../actions/actionCreators';\n\nexport default function ServiceFilter() {\n   const dispatch = useDispatch();\n   const items = useSelector((state) => state.serviceList);\n\n   const [filterText, setFilterText] = useState('');\n\n   const handleCange = (e) => {\n      const { value } = e.target;\n      dispatch(filterService(items, value));\n      setFilterText(value);\n   };\n\n   return (\n      <div>\n         <input\n            type=\"text\"\n            onChange={handleCange}\n            value={filterText}\n            placeholder=\"Поиск\"\n         />\n      </div>\n   );\n}\n","import React from 'react';\nimport ServiceList from './components/ServiceList';\nimport ServiceAdd from './components/ServiceAdd';\nimport ServiceFilter from './components/ServiceFilter';\n\nfunction App() {\n   return (\n      <div className=\"App\">\n         <ServiceFilter />\n         <ServiceAdd />\n         <ServiceList />\n      </div>\n   );\n}\n\nexport default App;\n","/* eslint-disable no-case-declarations */\nimport {\n   CHANGE_SERVICE_FIELD,\n   CLEAR_SERVICE_FIELD,\n   EDIT_SERVICE,\n} from '../actions/actionType';\n\nconst initialstate = {\n   name: '',\n   price: '',\n};\n\nexport default function serviceAddReducer(state = initialstate, action) {\n   switch (action.type) {\n      case CHANGE_SERVICE_FIELD:\n         const { name, value } = action.payload;\n         return {\n            ...state,\n            [name]: value,\n         };\n      case CLEAR_SERVICE_FIELD:\n         return {\n            name: '',\n            price: '',\n         };\n      case EDIT_SERVICE:\n         const { id, title, price } = action.payload;\n         return { id, name: title, price };\n\n      default:\n         return state;\n   }\n}\n","/* eslint-disable no-case-declarations */\nimport { nanoid } from 'nanoid';\nimport {\n   ADD_SERVICE,\n   REMOVE_SERVICE,\n   UPDATE_SERVICE,\n} from '../actions/actionType';\n\nconst initialstate = [\n   {\n      id: nanoid(),\n      name: 'замена стекла',\n      price: 21000,\n   },\n   {\n      id: nanoid(),\n      name: 'замена дисплея',\n      price: 25000,\n   },\n];\n\nexport default function serviceListReducer(state = initialstate, action) {\n   switch (action.type) {\n      case ADD_SERVICE:\n         const { name, price } = action.payload;\n         return [\n            ...state,\n            {\n               id: nanoid(),\n               name,\n               price: Number(price),\n            },\n         ];\n\n      case REMOVE_SERVICE:\n         const { id } = action.payload;\n         return state.filter((item) => item.id !== id);\n\n      case UPDATE_SERVICE:\n         const service = action.payload;\n         const filteredState = state.filter((item) => item.id !== service.id);\n         return [...filteredState, service];\n\n      default:\n         return state;\n   }\n}\n","/* eslint-disable no-case-declarations */\nimport { FILTER_SERVICES } from '../actions/actionType';\n\nconst initialState = {\n   filteredItems: [],\n   filterText: false,\n};\n\nexport default function serviceFilterReducer(state = initialState, action) {\n   switch (action.type) {\n      case FILTER_SERVICES:\n         const { items, value } = action.payload;\n         if (!value) {\n            return {\n               filteredItems: items,\n               filterText: false,\n            };\n         }\n         const data = items.filter((service) =>\n            service.name.match(value) ? service : null\n         );\n         return {\n            filteredItems: data,\n            filterText: value,\n         };\n      default:\n         return state;\n   }\n}\n","import { combineReducers, createStore } from 'redux';\nimport serviceAddReducer from '../reducers/serviceAdd';\nimport serviceListReducer from '../reducers/serviceList';\nimport serviceFilterReducer from '../reducers/serviceFilter';\n\nconst reducer = combineReducers({\n   serviceList: serviceListReducer,\n   serviceAdd: serviceAddReducer,\n   serviceFilter: serviceFilterReducer,\n});\n\nconst store = createStore(reducer);\n\nexport default store;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store/store';\n\nReactDOM.render(\n   <React.StrictMode>\n      <Provider store={store}>\n         <App />\n      </Provider>\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n"],"sourceRoot":""}